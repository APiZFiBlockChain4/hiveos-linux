#!/usr/bin/env bash
#[ -t 1 ] &&
. colors
#just a log wrapper, required by nvidia-ocx

#nvidia-oc > /var/log/nvidia-oc.log 2>&1

# OC runtime limit
TIMEOUT=150

# limit RUNNING_DELAY value
export MAX_RUNNING_DELAY=300

[[ -f $NVIDIA_OC_CONF ]] && source $NVIDIA_OC_CONF
if [[ ! -z $RUNNING_DELAY && $RUNNING_DELAY -gt 0 ]]; then
	[[ $RUNNING_DELAY -gt $MAX_RUNNING_DELAY ]] && RUNNING_DELAY=$MAX_RUNNING_DELAY
	TIMEOUT=$((TIMEOUT + RUNNING_DELAY))
fi

# do not run OC simultaneously
pids=(`pgrep -f "timeout .*/nvidia-oc.log"`)
for pid in "${pids[@]}"; do
	echo -e "${YELLOW}Killing running nvidia-oc ($pid)${NOCOLOR}"
	# timeout process PID is equal to the PGID, so using it to kill process group
	kill -- -$pid
done

timeout -s9 $TIMEOUT bash -c "set -o pipefail; nvidia-oc 2>&1 | tee /var/log/nvidia-oc.log"
exitcode=$?

if [[ $exitcode -ne 0 ]]; then
	echo -e "${RED}ERROR: NVIDIA OC failed ${NOCOLOR}"
	[[ "$1" != "quiet" ]] && cat /var/log/nvidia-oc.log | message error "NVIDIA OC failed" payload > /dev/nul
fi

#sed removes colors
#[[ -e /var/log/nvidia-oc.log ]] &&
#sed -i "s,$(printf '\033')\\[[0-9;]*[a-zA-Z],,g" /var/log/nvidia-oc.log

exit $exitcode