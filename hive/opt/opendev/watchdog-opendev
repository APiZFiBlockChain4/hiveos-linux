#!/usr/bin/env bash

[[ -z $1 ]] &&
	echo "Usage: `basename $0` ping|reset|power|fw|read [port]" &&
	exit 1

PORT=/dev/ttyACM0

if [ ! -z $2 ]; then
	if [[ $2 == "/dev/sg0" || $2 == "/dev/hidraw0" ]]; then
		echo "Skipping buggy detected port $2"
		exit 1;
	fi
	PORT=$2
	echo "Using $PORT"
else
	echo "Using $PORT by default"
fi

[[ ! -c $PORT ]] &&
	echo "$PORT is not a character device" &&
	exit 1


if [[ $1 == "reset" ]]; then
	echo "Pushing Reset"
	echo -n "~T1" > $PORT
	exit 0
fi


if [[ $1 == "power" ]]; then
	echo "Pushing Power"
	echo -n "~T2" > $PORT
	exit 0
fi


DMPLOG=/tmp/owdump.log

watchdog_query() {
	stty -F $PORT 115200 raw -echo
	for (( i=1; i <= 10; i++ ))
	do
		exec 9< $PORT
		cat <&9 > $DMPLOG &
		echo -n $1 > $PORT
		sleep 0.1s
		kill -INT $!
		exec 9<&-
		reply=`cat $DMPLOG | cut -d"~" -f 2`
		if [ ! -z "$reply" ]; then
			break
		fi
	done
	echo $reply
}


if [[ $1 == "fw" ]]; then
	echo "Reading firmware version"
	watchdog_query "~I"
	exit 0
fi


if [[ $1 == "read" ]]; then
	echo "Reading settings"
	watchdog_query "~F"
	exit 0
fi


#should be ping here, but will work with any
#if port 22 (ssh) responds then
#send ping signal to WD, if WD does not receive it for a while, then WD RESET the MB.

while true
do
	echo "Pinging watchdog"
	[[ `nc -w 2 -zv localhost 22 2>&1 | grep -c succeeded` -gt 0 ]] && echo -n "~U" > $PORT
	sleep 5
done
