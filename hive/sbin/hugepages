#!/bin/bash

. colors

VERS="0.3.1"

HUGES_RX=1168
HUGES_CN=128
MEM_RES_PERC=90                                                                 # % of available memory for reservation

HPAGES_REQ=$1                                                                   # Requested number of HugePages

MEM_AVAIL=`cat /proc/meminfo | grep "MemFree" | awk '{ print $2 }'`             # Memory available
HPAGE_SIZE=`cat /proc/meminfo | grep "Hugepagesize" | awk '{ print $2 }'`       # HugePage size usually 2M
HPAGES_CUR=`cat /proc/meminfo | grep "HugePages_Total" | awk '{ print $2 }'`    # Number of HugePages (current value)
HPAGES_MAX=$(($HPAGES_CUR+$MEM_AVAIL/$HPAGE_SIZE*$MEM_RES_PERC/100))            # Number of HugePages (max calculated)

CPU_NUMA=`lscpu | grep "NUMA node(s)" | awk '{ print $3 }'`
CPU_CORE=`lscpu | grep "^CPU(s):" | awk '{ print $2 }'`

HUGES_RX_CALC=$(( $HUGES_RX * $CPU_NUMA + $CPU_CORE ))

huge_intel_boost(){
    cpu_check=`lscpu | grep "Model name" | grep -c "Intel"`
    msr_check=`lscpu | grep "^Flags" | grep -c "msr"`
    if [[ "$cpu_check" -gt 0 && "$msr_check" -gt 0 ]]; then
        pkg_check=`dpkg -l | grep -c "msr-tools"`
        if [[ "$pkg_check" -eq 0 ]]; then
            echo "Installing msr-tools package ..."
            apt install -y msr-tools
        fi
        [[ `lsmod | grep msr` == "" ]] && modprobe msr
        wrmsr -a 0x1a4 6
        echo -e "${GREEN}[INFO]${NOCOLOR} Intel CPU RandomX boost applied"
    fi
}

huge_pages_set(){
    echo $1 > /proc/sys/vm/nr_hugepages
}

huge_cur_print(){
    echo -e "HugePages (current): ${GREEN}$HPAGES_CUR${NOCOLOR}"
}

huge_cpu_print(){
    local AES=`lscpu | grep -c "aes"`
    echo -n -e "Your system has ${YELLOW}$CPU_NUMA${NOCOLOR} NUMA node(s) and ${YELLOW}$CPU_CORE${NOCOLOR} CPUs cores with "
    [[ $AES == 1 ]] && echo -e "${GREEN}with AES support${NOCOLOR}" || echo -e "${RED}no AES support${NOCOLOR}"
}

huge_max_print(){
    echo -e "HugePages (maximum): ${RED}$HPAGES_MAX${NOCOLOR}"
}

huge_rx_print(){
    echo -e "HugePages (randomx): ${YELLOW}$HUGES_RX_CALC${NOCOLOR}"
}

print_banner(){
    echo -e "${CYAN}Hive HugePages Helper v${VERS}${NOCOLOR}"
}

print_help(){
    print_banner
    echo -e "This tool allows you to set the desired value for hugepages."
    echo -e "${DGRAY}The suggested value for CN-based algorithms is ${HUGES_CN}"
    echo -e "The suggested value for RandomX is $HUGES_RX_CALC"
    echo
    echo -e "${YELLOW}Usage: \n\t${CYAN}hugepages value${NOCOLOR}"
    echo
    echo -e "${YELLOW}Other examples of usage:${NOCOLOR}"
    echo -e "\t${CYAN}hugepages -r${NOCOLOR}  - ${LGRAY}restoring system defaults"
    echo -e "\t${CYAN}hugepages -rx${NOCOLOR} - ${LGRAY}try set suggested value ($HUGES_RX_CALC) for RandomX"
    echo -e "\t${CYAN}hugepages -cn${NOCOLOR} - ${LGRAY}try set suggested value ($HUGES_CN) for CN-based "
    echo -e "\t${CYAN}hugepages -h${NOCOLOR}  - ${LGRAY}this help "
}

huge_get_def(){
    echo `cat /etc/sysctl.conf | grep vm.nr_hugepages | tr '=' ' ' | awk '{ print $2 }'`
}

################################################################################
# MAIN SCRIPT BODY
################################################################################
print_banner
[[ -z $HPAGES_REQ ]] && huge_cpu_print && huge_cur_print && huge_max_print && huge_rx_print && exit 0
case $1 in
    -h|--help)
        print_help
        exit 0
        ;;
    -r|--restore)
        HPAGES_REQ=`huge_get_def`
        echo -e "${GREEN}[INFO]${NOCOLOR} Try restore to system default HugePages value: ${YELLOW}$HPAGES_REQ${NOCOLOR}"
        ;;
    -rx)
        HPAGES_REQ=$HUGES_RX_CALC
        echo -e "${GREEN}[INFO]${NOCOLOR} Try set HugePages to suggested for RandomX algorithm value: ${YELLOW}$HPAGES_REQ${NOCOLOR}"
        ;;
    -cn)
        HPAGES_REQ=128
        echo -e "${GREEN}[INFO]${NOCOLOR} Try set HugePages to suggested for CN-based algorithms value: ${YELLOW}$HPAGES_REQ${NOCOLOR}"
        ;;
     *)
        re='^[0-9]+$'
        if ! [[ $HPAGES_REQ =~ $re ]] ; then
            echo -e "${RED}[ERR] ${YELLOW}Invalid value given${NOCOLOR}" >&2; exit 1
        fi
esac

if [[ $HPAGES_REQ -gt $HUGES_CN ]]; then
    huge_intel_boost
fi

if [[ $HPAGES_REQ -le $HPAGES_MAX ]]; then
    huge_pages_set $HPAGES_REQ
else
    echo -e "${YELLOW}[WARN]${NOCOLOR} HugePages requested ($HPAGES_REQ) more then maximum suggested ($HPAGES_MAX)."
    huge_pages_set $HPAGES_MAX
fi

HPAGES_SET=`cat /proc/sys/vm/nr_hugepages`

echo -e "${GREEN}[INFO]${NOCOLOR} New HugePages value set: ${GREEN}$HPAGES_SET${NOCOLOR}"

exit 0

