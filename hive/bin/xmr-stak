#!/usr/bin/env bash

THIS_MINER_NAME="xmr-stak"
[ -t 1 ] && . colors


[[ `ps aux | grep "./xmr-stak " | grep -v grep | wc -l` != 0 ]] &&
	echo -e "${RED}$THIS_MINER_NAME miner is already running${NOCOLOR}" &&
	exit 1




function config_gen() {
	RIG_CONF="/hive-config/rig.conf"
	WALLET_CONF="/hive-config/wallet.conf"
	MINER_CONFIG="/hive/$THIS_MINER_NAME/config.txt"

	[ ! -f $RIG_CONF ] && echo -e "${RED}No rig config $RIG_CONF${NOCOLOR}" && return 1
	[ ! -f $WALLET_CONF ] && echo -e "${RED}No wallet config $WALLET_CONF${NOCOLOR}" && return 1

	. $RIG_CONF
	. $WALLET_CONF

	conf=`cat /hive/$THIS_MINER_NAME/config_global.json`
	userconf='{}'
	#merge user config options into main config
	if [[ ! -z $XMR_STAK_USER_CONFIG ]]; then
		while read -r line; do
			[[ -z $line ]] && continue
			conf=$(jq -s '.[0] * .[1]' <<< "$conf {$line}")
		done <<< "$XMR_STAK_USER_CONFIG"
	fi


	tpl=$XMR_STAK_TEMPLATE
	[[ ! -z $EWAL ]] && tpl=$(sed "s/%EWAL%/$EWAL/g" <<< $tpl) #|| echo "${RED}EWAL not set${NOCOLOR}"
	[[ ! -z $DWAL ]] && tpl=$(sed "s/%DWAL%/$DWAL/g" <<< $tpl) #|| echo "${RED}DWAL not set${NOCOLOR}"
	[[ ! -z $ZWAL ]] && tpl=$(sed "s/%ZWAL%/$ZWAL/g" <<< $tpl) #|| echo "${RED}ZWAL not set${NOCOLOR}"
	[[ ! -z $WORKER_NAME ]] && tpl=$(sed "s/%WORKER_NAME%/$WORKER_NAME/g" <<< $tpl) #|| echo "${RED}WORKER_NAME not set${NOCOLOR}"
	[[ ! -z $EMAIL ]] && tpl=$(sed "s/%EMAIL%/$EMAIL/g" <<< $tpl)


	pools='[]'
	for url in $XMR_STAK_URL; do
		grep -q "nicehash.com" <<< $XMR_STAK_URL
		[[ $? -eq 0 ]] && nicehash="true" || nicehash="false"
		pool=$(cat <<EOF
			{"pool_address": "$url", "wallet_address": "$tpl", "pool_password": "$XMR_STAK_PASS", "use_nicehash": $nicehash, "use_tls": false, "tls_fingerprint": "", "pool_weight": 1 }
EOF
)
		pools=`jq --null-input --argjson pools "$pools" --argjson pool "$pool" '$pools + [$pool]'`
	done

	if [[ -z $pools || $pools == '[]' || $pools == 'null' ]]; then
		echo -e "${RED}No pools configured, using default${NOCOLOR}"
	else
		pools=`jq --null-input --argjson pool_list "$pools" '{$pool_list}'`
		conf=$(jq -s '.[0] * .[1]' <<< "$conf $pools")
	fi


	#amd nvidia cpu overrides or default

	[[ -e /hive/$THIS_MINER_NAME/amd.txt ]] && rm /hive/$THIS_MINER_NAME/amd.txt
	[[ -e /hive/$THIS_MINER_NAME/nvidia.txt ]] && rm /hive/$THIS_MINER_NAME/nvidia.txt
	[[ -e /hive/$THIS_MINER_NAME/cpu.txt ]] && rm /hive/$THIS_MINER_NAME/cpu.txt

	[[ ! -z $XMR_STAK_AMD ]] && echo "$XMR_STAK_AMD" > /hive/$THIS_MINER_NAME/amd.txt
	[[ ! -z $XMR_STAK_NVIDIA ]] && echo "$XMR_STAK_NVIDIA" > /hive/$THIS_MINER_NAME/nvidia.txt
	[[ ! -z $XMR_STAK_CPU ]] && echo "$XMR_STAK_CPU" > /hive/$THIS_MINER_NAME/cpu.txt


	#delete { and } lines
	echo $conf | jq . | sed 1d | sed '$d' > $MINER_CONFIG
}


config_gen


cd /hive/$THIS_MINER_NAME
while true
do
	/hive/$THIS_MINER_NAME/xmr-stak.sh
	echo ""
	echo -e "${YELLOW}$THIS_MINER_NAME exited, waiting to cooldown a bit${NOCOLOR}"
	echo ""
	sleep 3
done
